ifeq ($(TARGET_PROCESSOR),STM32F100C4)
  LINKER_SCRIPT_FILE=STM32F1_16FLASH_4RAM.ld
  STARTUP_FILE=startup_stm32f100xb.s
  PROCESSOR_MACRO=STM32F100xB
else ifeq ($(TARGET_PROCESSOR),STM32F100C6)
  LINKER_SCRIPT_FILE=STM32F1_32FLASH_4RAM.ld
  STARTUP_FILE=startup_stm32f100xb.s
  PROCESSOR_MACRO=STM32F100xB
else ifeq ($(TARGET_PROCESSOR),STM32F100C8)
  LINKER_SCRIPT_FILE=STM32F1_64FLASH_8RAM.ld
  STARTUP_FILE=startup_stm32f100xb.s
  PROCESSOR_MACRO=STM32F100xB
else ifeq ($(TARGET_PROCESSOR),STM32F100CB)
  LINKER_SCRIPT_FILE=STM32F1_128FLASH_8RAM.ld
  STARTUP_FILE=startup_stm32f100xb.s
  PROCESSOR_MACRO=STM32F100xB
else ifeq ($(TARGET_PROCESSOR),STM32F100R4)
  LINKER_SCRIPT_FILE=STM32F1_16FLASH_4RAM.ld
  STARTUP_FILE=startup_stm32f100xb.s
  PROCESSOR_MACRO=STM32F100xB
else ifeq ($(TARGET_PROCESSOR),STM32F100R6)
  LINKER_SCRIPT_FILE=STM32F1_32FLASH_4RAM.ld
  STARTUP_FILE=startup_stm32f100xb.s
  PROCESSOR_MACRO=STM32F100xB
else ifeq ($(TARGET_PROCESSOR),STM32F100R8)
  LINKER_SCRIPT_FILE=STM32F1_64FLASH_8RAM.ld
  STARTUP_FILE=startup_stm32f100xb.s
  PROCESSOR_MACRO=STM32F100xB
else ifeq ($(TARGET_PROCESSOR),STM32F100RB)
  LINKER_SCRIPT_FILE=STM32F1_128FLASH_8RAM.ld
  STARTUP_FILE=startup_stm32f100xb.s
  PROCESSOR_MACRO=STM32F100xB
else ifeq ($(TARGET_PROCESSOR),STM32F100RC)
  LINKER_SCRIPT_FILE=STM32F1_256FLASH_24RAM.ld
  STARTUP_FILE=startup_stm32f100xe.s
  PROCESSOR_MACRO=STM32F100xE
else ifeq ($(TARGET_PROCESSOR),STM32F100RD)
  LINKER_SCRIPT_FILE=STM32F1_384FLASH_32RAM.ld
  STARTUP_FILE=startup_stm32f100xe.s
  PROCESSOR_MACRO=STM32F100xE
else ifeq ($(TARGET_PROCESSOR),STM32F100RE)
  LINKER_SCRIPT_FILE=STM32F1_512FLASH_32RAM.ld
  STARTUP_FILE=startup_stm32f100xe.s
  PROCESSOR_MACRO=STM32F100xE
else ifeq ($(TARGET_PROCESSOR),STM32F100V8)
  LINKER_SCRIPT_FILE=STM32F1_64FLASH_8RAM.ld
  STARTUP_FILE=startup_stm32f100xb.s
  PROCESSOR_MACRO=STM32F100xB
else ifeq ($(TARGET_PROCESSOR),STM32F100VB)
  LINKER_SCRIPT_FILE=STM32F1_128FLASH_8RAM.ld
  STARTUP_FILE=startup_stm32f100xb.s
  PROCESSOR_MACRO=STM32F100xB
else ifeq ($(TARGET_PROCESSOR),STM32F100VC)
  LINKER_SCRIPT_FILE=STM32F1_256FLASH_24RAM.ld
  STARTUP_FILE=startup_stm32f100xe.s
  PROCESSOR_MACRO=STM32F100xE
else ifeq ($(TARGET_PROCESSOR),STM32F100VD)
  LINKER_SCRIPT_FILE=STM32F1_384FLASH_32RAM.ld
  STARTUP_FILE=startup_stm32f100xe.s
  PROCESSOR_MACRO=STM32F100xE
else ifeq ($(TARGET_PROCESSOR),STM32F100VE)
  LINKER_SCRIPT_FILE=STM32F1_512FLASH_32RAM.ld
  STARTUP_FILE=startup_stm32f100xe.s
  PROCESSOR_MACRO=STM32F100xE
else ifeq ($(TARGET_PROCESSOR),STM32F100ZC)
  LINKER_SCRIPT_FILE=STM32F1_256FLASH_24RAM.ld
  STARTUP_FILE=startup_stm32f100xe.s
  PROCESSOR_MACRO=STM32F100xE
else ifeq ($(TARGET_PROCESSOR),STM32F100ZD)
  LINKER_SCRIPT_FILE=STM32F1_384FLASH_32RAM.ld
  STARTUP_FILE=startup_stm32f100xe.s
  PROCESSOR_MACRO=STM32F100xE
else ifeq ($(TARGET_PROCESSOR),STM32F100ZE)
  LINKER_SCRIPT_FILE=STM32F1_512FLASH_32RAM.ld
  STARTUP_FILE=startup_stm32f100xe.s
  PROCESSOR_MACRO=STM32F100xE
else ifeq ($(TARGET_PROCESSOR),STM32F101C6)
  LINKER_SCRIPT_FILE=STM32F1_32FLASH_6RAM.ld
  STARTUP_FILE=startup_stm32f101x6.s
  PROCESSOR_MACRO=STM32F101x6
else ifeq ($(TARGET_PROCESSOR),STM32F101C8)
  LINKER_SCRIPT_FILE=STM32F1_64FLASH_10RAM.ld
  STARTUP_FILE=startup_stm32f101xb.s
  PROCESSOR_MACRO=STM32F101xB
else ifeq ($(TARGET_PROCESSOR),STM32F101CB)
  LINKER_SCRIPT_FILE=STM32F1_128FLASH_16RAM.ld
  STARTUP_FILE=startup_stm32f101xb.s
  PROCESSOR_MACRO=STM32F101xB
else ifeq ($(TARGET_PROCESSOR),STM32F101R4)
  LINKER_SCRIPT_FILE=STM32F1_16FLASH_4RAM.ld
  STARTUP_FILE=startup_stm32f101x6.s
  PROCESSOR_MACRO=STM32F101x6
else ifeq ($(TARGET_PROCESSOR),STM32F101R6)
  LINKER_SCRIPT_FILE=STM32F1_32FLASH_6RAM.ld
  STARTUP_FILE=startup_stm32f101x6.s
  PROCESSOR_MACRO=STM32F101x6
else ifeq ($(TARGET_PROCESSOR),STM32F101R8)
  LINKER_SCRIPT_FILE=STM32F1_64FLASH_10RAM.ld
  STARTUP_FILE=startup_stm32f101xb.s
  PROCESSOR_MACRO=STM32F101xB
else ifeq ($(TARGET_PROCESSOR),STM32F101RB)
  LINKER_SCRIPT_FILE=STM32F1_128FLASH_16RAM.ld
  STARTUP_FILE=startup_stm32f101xb.s
  PROCESSOR_MACRO=STM32F101xB
else ifeq ($(TARGET_PROCESSOR),STM32F101RC)
  LINKER_SCRIPT_FILE=STM32F1_256FLASH_32RAM.ld
  STARTUP_FILE=startup_stm32f101xe.s
  PROCESSOR_MACRO=STM32F101xE
else ifeq ($(TARGET_PROCESSOR),STM32F101RD)
  LINKER_SCRIPT_FILE=STM32F1_384FLASH_48RAM.ld
  STARTUP_FILE=startup_stm32f101xe.s
  PROCESSOR_MACRO=STM32F101xE
else ifeq ($(TARGET_PROCESSOR),STM32F101RE)
  LINKER_SCRIPT_FILE=STM32F1_512FLASH_48RAM.ld
  STARTUP_FILE=startup_stm32f101xe.s
  PROCESSOR_MACRO=STM32F101xE
else ifeq ($(TARGET_PROCESSOR),STM32F101RF)
  LINKER_SCRIPT_FILE=STM32F1_768FLASH_80RAM.ld
  STARTUP_FILE=startup_stm32f101xg.s
  PROCESSOR_MACRO=STM32F101xG
else ifeq ($(TARGET_PROCESSOR),STM32F101RG)
  LINKER_SCRIPT_FILE=STM32F1_1024FLASH_80RAM.ld
  STARTUP_FILE=startup_stm32f101xg.s
  PROCESSOR_MACRO=STM32F101xG
else ifeq ($(TARGET_PROCESSOR),STM32F101T4)
  LINKER_SCRIPT_FILE=STM32F1_16FLASH_4RAM.ld
  STARTUP_FILE=startup_stm32f101x6.s
  PROCESSOR_MACRO=STM32F101x6
else ifeq ($(TARGET_PROCESSOR),STM32F101T6)
  LINKER_SCRIPT_FILE=STM32F1_32FLASH_6RAM.ld
  STARTUP_FILE=startup_stm32f101x6.s
  PROCESSOR_MACRO=STM32F101x6
else ifeq ($(TARGET_PROCESSOR),STM32F101T8)
  LINKER_SCRIPT_FILE=STM32F1_64FLASH_10RAM.ld
  STARTUP_FILE=startup_stm32f101xb.s
  PROCESSOR_MACRO=STM32F101xB
else ifeq ($(TARGET_PROCESSOR),STM32F101TB)
  LINKER_SCRIPT_FILE=STM32F1_128FLASH_16RAM.ld
  STARTUP_FILE=startup_stm32f101xb.s
  PROCESSOR_MACRO=STM32F101xB
else ifeq ($(TARGET_PROCESSOR),STM32F101V8)
  LINKER_SCRIPT_FILE=STM32F1_64FLASH_10RAM.ld
  STARTUP_FILE=startup_stm32f101xb.s
  PROCESSOR_MACRO=STM32F101xB
else ifeq ($(TARGET_PROCESSOR),STM32F101VB)
  LINKER_SCRIPT_FILE=STM32F1_128FLASH_16RAM.ld
  STARTUP_FILE=startup_stm32f101xb.s
  PROCESSOR_MACRO=STM32F101xB
else ifeq ($(TARGET_PROCESSOR),STM32F101VC)
  LINKER_SCRIPT_FILE=STM32F1_256FLASH_32RAM.ld
  STARTUP_FILE=startup_stm32f101xe.s
  PROCESSOR_MACRO=STM32F101xE
else ifeq ($(TARGET_PROCESSOR),STM32F101VD)
  LINKER_SCRIPT_FILE=STM32F1_384FLASH_48RAM.ld
  STARTUP_FILE=startup_stm32f101xe.s
  PROCESSOR_MACRO=STM32F101xE
else ifeq ($(TARGET_PROCESSOR),STM32F101VE)
  LINKER_SCRIPT_FILE=STM32F1_512FLASH_48RAM.ld
  STARTUP_FILE=startup_stm32f101xe.s
  PROCESSOR_MACRO=STM32F101xE
else ifeq ($(TARGET_PROCESSOR),STM32F101VF)
  LINKER_SCRIPT_FILE=STM32F1_768FLASH_80RAM.ld
  STARTUP_FILE=startup_stm32f101xg.s
  PROCESSOR_MACRO=STM32F101xG
else ifeq ($(TARGET_PROCESSOR),STM32F101VG)
  LINKER_SCRIPT_FILE=STM32F1_1024FLASH_80RAM.ld
  STARTUP_FILE=startup_stm32f101xg.s
  PROCESSOR_MACRO=STM32F101xG
else ifeq ($(TARGET_PROCESSOR),STM32F101ZC)
  LINKER_SCRIPT_FILE=STM32F1_256FLASH_32RAM.ld
  STARTUP_FILE=startup_stm32f101xe.s
  PROCESSOR_MACRO=STM32F101xE
else ifeq ($(TARGET_PROCESSOR),STM32F101ZD)
  LINKER_SCRIPT_FILE=STM32F1_384FLASH_48RAM.ld
  STARTUP_FILE=startup_stm32f101xe.s
  PROCESSOR_MACRO=STM32F101xE
else ifeq ($(TARGET_PROCESSOR),STM32F101ZE)
  LINKER_SCRIPT_FILE=STM32F1_512FLASH_48RAM.ld
  STARTUP_FILE=startup_stm32f101xe.s
  PROCESSOR_MACRO=STM32F101xE
else ifeq ($(TARGET_PROCESSOR),STM32F101ZF)
  LINKER_SCRIPT_FILE=STM32F1_768FLASH_80RAM.ld
  STARTUP_FILE=startup_stm32f101xg.s
  PROCESSOR_MACRO=STM32F101xG
else ifeq ($(TARGET_PROCESSOR),STM32F101ZG)
  LINKER_SCRIPT_FILE=STM32F1_1024FLASH_80RAM.ld
  STARTUP_FILE=startup_stm32f101xg.s
  PROCESSOR_MACRO=STM32F101xG
else ifeq ($(TARGET_PROCESSOR),STM32F102C4)
  LINKER_SCRIPT_FILE=STM32F1_16FLASH_4RAM.ld
  STARTUP_FILE=startup_stm32f102x6.s
  PROCESSOR_MACRO=STM32F102x6
else ifeq ($(TARGET_PROCESSOR),STM32F102C6)
  LINKER_SCRIPT_FILE=STM32F1_32FLASH_6RAM.ld
  STARTUP_FILE=startup_stm32f102x6.s
  PROCESSOR_MACRO=STM32F102x6
else ifeq ($(TARGET_PROCESSOR),STM32F102C8)
  LINKER_SCRIPT_FILE=STM32F1_64FLASH_10RAM.ld
  STARTUP_FILE=startup_stm32f102xb.s
  PROCESSOR_MACRO=STM32F102xB
else ifeq ($(TARGET_PROCESSOR),STM32F102CB)
  LINKER_SCRIPT_FILE=STM32F1_128FLASH_16RAM.ld
  STARTUP_FILE=startup_stm32f102xb.s
  PROCESSOR_MACRO=STM32F102xB
else ifeq ($(TARGET_PROCESSOR),STM32F102R4)
  LINKER_SCRIPT_FILE=STM32F1_16FLASH_4RAM.ld
  STARTUP_FILE=startup_stm32f102x6.s
  PROCESSOR_MACRO=STM32F102x6
else ifeq ($(TARGET_PROCESSOR),STM32F102R6)
  LINKER_SCRIPT_FILE=STM32F1_32FLASH_6RAM.ld
  STARTUP_FILE=startup_stm32f102x6.s
  PROCESSOR_MACRO=STM32F102x6
else ifeq ($(TARGET_PROCESSOR),STM32F102R8)
  LINKER_SCRIPT_FILE=STM32F1_64FLASH_10RAM.ld
  STARTUP_FILE=startup_stm32f102xb.s
  PROCESSOR_MACRO=STM32F102xB
else ifeq ($(TARGET_PROCESSOR),STM32F102RB)
  LINKER_SCRIPT_FILE=STM32F1_128FLASH_16RAM.ld
  STARTUP_FILE=startup_stm32f102xb.s
  PROCESSOR_MACRO=STM32F102xB
else ifeq ($(TARGET_PROCESSOR),STM32F103C4)
  LINKER_SCRIPT_FILE=STM32F1_16FLASH_6RAM.ld
  STARTUP_FILE=startup_stm32f103x6.s
  PROCESSOR_MACRO=STM32F103x6
else ifeq ($(TARGET_PROCESSOR),STM32F103C6)
  LINKER_SCRIPT_FILE=STM32F1_32FLASH_10RAM.ld
  STARTUP_FILE=startup_stm32f103x6.s
  PROCESSOR_MACRO=STM32F103x6
else ifeq ($(TARGET_PROCESSOR),STM32F103C8)
  LINKER_SCRIPT_FILE=STM32F1_64FLASH_20RAM.ld
  STARTUP_FILE=startup_stm32f103xb.s
  PROCESSOR_MACRO=STM32F103xB
else ifeq ($(TARGET_PROCESSOR),STM32F103CB)
  LINKER_SCRIPT_FILE=STM32F1_128FLASH_20RAM.ld
  STARTUP_FILE=startup_stm32f103xb.s
  PROCESSOR_MACRO=STM32F103xB
else ifeq ($(TARGET_PROCESSOR),STM32F103R4)
  LINKER_SCRIPT_FILE=STM32F1_16FLASH_6RAM.ld
  STARTUP_FILE=startup_stm32f103x6.s
  PROCESSOR_MACRO=STM32F103x6
else ifeq ($(TARGET_PROCESSOR),STM32F103R6)
  LINKER_SCRIPT_FILE=STM32F1_32FLASH_10RAM.ld
  STARTUP_FILE=startup_stm32f103x6.s
  PROCESSOR_MACRO=STM32F103x6
else ifeq ($(TARGET_PROCESSOR),STM32F103R8)
  LINKER_SCRIPT_FILE=STM32F1_64FLASH_20RAM.ld
  STARTUP_FILE=startup_stm32f103xb.s
  PROCESSOR_MACRO=STM32F103xB
else ifeq ($(TARGET_PROCESSOR),STM32F103RB)
  LINKER_SCRIPT_FILE=STM32F1_128FLASH_20RAM.ld
  STARTUP_FILE=startup_stm32f103xb.s
  PROCESSOR_MACRO=STM32F103xB
else ifeq ($(TARGET_PROCESSOR),STM32F103RC)
  LINKER_SCRIPT_FILE=STM32F1_256FLASH_48RAM.ld
  STARTUP_FILE=startup_stm32f103xe.s
  PROCESSOR_MACRO=STM32F103xE
else ifeq ($(TARGET_PROCESSOR),STM32F103RD)
  LINKER_SCRIPT_FILE=STM32F1_384FLASH_64RAM.ld
  STARTUP_FILE=startup_stm32f103xe.s
  PROCESSOR_MACRO=STM32F103xE
else ifeq ($(TARGET_PROCESSOR),STM32F103RE)
  LINKER_SCRIPT_FILE=STM32F1_512FLASH_64RAM.ld
  STARTUP_FILE=startup_stm32f103xe.s
  PROCESSOR_MACRO=STM32F103xE
else ifeq ($(TARGET_PROCESSOR),STM32F103RF)
  LINKER_SCRIPT_FILE=STM32F1_768FLASH_96RAM.ld
  STARTUP_FILE=startup_stm32f103xg.s
  PROCESSOR_MACRO=STM32F103xG
else ifeq ($(TARGET_PROCESSOR),STM32F103RG)
  LINKER_SCRIPT_FILE=STM32F1_1024FLASH_96RAM.ld
  STARTUP_FILE=startup_stm32f103xg.s
  PROCESSOR_MACRO=STM32F103xG
else ifeq ($(TARGET_PROCESSOR),STM32F103T4)
  LINKER_SCRIPT_FILE=STM32F1_16FLASH_6RAM.ld
  STARTUP_FILE=startup_stm32f103x6.s
  PROCESSOR_MACRO=STM32F103x6
else ifeq ($(TARGET_PROCESSOR),STM32F103T6)
  LINKER_SCRIPT_FILE=STM32F1_32FLASH_10RAM.ld
  STARTUP_FILE=startup_stm32f103x6.s
  PROCESSOR_MACRO=STM32F103x6
else ifeq ($(TARGET_PROCESSOR),STM32F103T8)
  LINKER_SCRIPT_FILE=STM32F1_64FLASH_20RAM.ld
  STARTUP_FILE=startup_stm32f103xb.s
  PROCESSOR_MACRO=STM32F103xB
else ifeq ($(TARGET_PROCESSOR),STM32F103TB)
  LINKER_SCRIPT_FILE=STM32F1_128FLASH_20RAM.ld
  STARTUP_FILE=startup_stm32f103xb.s
  PROCESSOR_MACRO=STM32F103xB
else ifeq ($(TARGET_PROCESSOR),STM32F103V8)
  LINKER_SCRIPT_FILE=STM32F1_64FLASH_20RAM.ld
  STARTUP_FILE=startup_stm32f103xb.s
  PROCESSOR_MACRO=STM32F103xB
else ifeq ($(TARGET_PROCESSOR),STM32F103VB)
  LINKER_SCRIPT_FILE=STM32F1_128FLASH_20RAM.ld
  STARTUP_FILE=startup_stm32f103xb.s
  PROCESSOR_MACRO=STM32F103xB
else ifeq ($(TARGET_PROCESSOR),STM32F103VC)
  LINKER_SCRIPT_FILE=STM32F1_256FLASH_48RAM.ld
  STARTUP_FILE=startup_stm32f103xe.s
  PROCESSOR_MACRO=STM32F103xE
else ifeq ($(TARGET_PROCESSOR),STM32F103VD)
  LINKER_SCRIPT_FILE=STM32F1_384FLASH_64RAM.ld
  STARTUP_FILE=startup_stm32f103xe.s
  PROCESSOR_MACRO=STM32F103xE
else ifeq ($(TARGET_PROCESSOR),STM32F103VE)
  LINKER_SCRIPT_FILE=STM32F1_512FLASH_64RAM.ld
  STARTUP_FILE=startup_stm32f103xe.s
  PROCESSOR_MACRO=STM32F103xE
else ifeq ($(TARGET_PROCESSOR),STM32F103VF)
  LINKER_SCRIPT_FILE=STM32F1_768FLASH_96RAM.ld
  STARTUP_FILE=startup_stm32f103xg.s
  PROCESSOR_MACRO=STM32F103xG
else ifeq ($(TARGET_PROCESSOR),STM32F103VG)
  LINKER_SCRIPT_FILE=STM32F1_1024FLASH_96RAM.ld
  STARTUP_FILE=startup_stm32f103xg.s
  PROCESSOR_MACRO=STM32F103xG
else ifeq ($(TARGET_PROCESSOR),STM32F103ZC)
  LINKER_SCRIPT_FILE=STM32F1_256FLASH_48RAM.ld
  STARTUP_FILE=startup_stm32f103xe.s
  PROCESSOR_MACRO=STM32F103xE
else ifeq ($(TARGET_PROCESSOR),STM32F103ZD)
  LINKER_SCRIPT_FILE=STM32F1_384FLASH_64RAM.ld
  STARTUP_FILE=startup_stm32f103xe.s
  PROCESSOR_MACRO=STM32F103xE
else ifeq ($(TARGET_PROCESSOR),STM32F103ZE)
  LINKER_SCRIPT_FILE=STM32F1_512FLASH_64RAM.ld
  STARTUP_FILE=startup_stm32f103xe.s
  PROCESSOR_MACRO=STM32F103xE
else ifeq ($(TARGET_PROCESSOR),STM32F103ZF)
  LINKER_SCRIPT_FILE=STM32F1_768FLASH_96RAM.ld
  STARTUP_FILE=startup_stm32f103xg.s
  PROCESSOR_MACRO=STM32F103xG
else ifeq ($(TARGET_PROCESSOR),STM32F103ZG)
  LINKER_SCRIPT_FILE=STM32F1_1024FLASH_96RAM.ld
  STARTUP_FILE=startup_stm32f103xg.s
  PROCESSOR_MACRO=STM32F103xG
else ifeq ($(TARGET_PROCESSOR),STM32F105R8)
  LINKER_SCRIPT_FILE=STM32F1_64FLASH_64RAM.ld
  STARTUP_FILE=startup_stm32f105xc.s
  PROCESSOR_MACRO=STM32F105xC
else ifeq ($(TARGET_PROCESSOR),STM32F105RB)
  LINKER_SCRIPT_FILE=STM32F1_128FLASH_64RAM.ld
  STARTUP_FILE=startup_stm32f105xc.s
  PROCESSOR_MACRO=STM32F105xC
else ifeq ($(TARGET_PROCESSOR),STM32F105RC)
  LINKER_SCRIPT_FILE=STM32F1_256FLASH_64RAM.ld
  STARTUP_FILE=startup_stm32f105xc.s
  PROCESSOR_MACRO=STM32F105xC
else ifeq ($(TARGET_PROCESSOR),STM32F105V8)
  LINKER_SCRIPT_FILE=STM32F1_64FLASH_64RAM.ld
  STARTUP_FILE=startup_stm32f105xc.s
  PROCESSOR_MACRO=STM32F105xC
else ifeq ($(TARGET_PROCESSOR),STM32F105VB)
  LINKER_SCRIPT_FILE=STM32F1_128FLASH_64RAM.ld
  STARTUP_FILE=startup_stm32f105xc.s
  PROCESSOR_MACRO=STM32F105xC
else ifeq ($(TARGET_PROCESSOR),STM32F105VC)
  LINKER_SCRIPT_FILE=STM32F1_256FLASH_64RAM.ld
  STARTUP_FILE=startup_stm32f105xc.s
  PROCESSOR_MACRO=STM32F105xC
else ifeq ($(TARGET_PROCESSOR),STM32F107RB)
  LINKER_SCRIPT_FILE=STM32F1_128FLASH_64RAM.ld
  STARTUP_FILE=startup_stm32f107xc.s
  PROCESSOR_MACRO=STM32F107xC
else ifeq ($(TARGET_PROCESSOR),STM32F107RC)
  LINKER_SCRIPT_FILE=STM32F1_256FLASH_64RAM.ld
  STARTUP_FILE=startup_stm32f107xc.s
  PROCESSOR_MACRO=STM32F107xC
else ifeq ($(TARGET_PROCESSOR),STM32F107VB)
  LINKER_SCRIPT_FILE=STM32F1_128FLASH_64RAM.ld
  STARTUP_FILE=startup_stm32f107xc.s
  PROCESSOR_MACRO=STM32F107xC
else ifeq ($(TARGET_PROCESSOR),STM32F107VC)
  LINKER_SCRIPT_FILE=STM32F1_256FLASH_64RAM.ld
  STARTUP_FILE=startup_stm32f107xc.s
  PROCESSOR_MACRO=STM32F107xC
endif
